{
  "": "",
  "No files found, create one": "No files found, create one",
  "File generation canceled": "File generation canceled",
  "No files found in the specified folder, create a new one": "No files found in the specified folder, create a new one",
  "Error configuring Go modules": "Error configuring Go modules",
  "Reply without comment or explanation": "Reply without comment or explanation",
  "Reply without comment or explanation, only the code needed": "Reply without comment or explanation, only the code needed",
  "Here is the Golang code": "Here is the Golang code",
  "Error retrieving the name of the contents of the current file": "Error retrieving the name of the contents of the current file",
  "Error retrieving test file name": "Error retrieving test file name",
  "Error generating code": "Error generating code",
  "error accessing path": "error accessing path",
  "directory processing": "directory processing",
  "Processing the file": "Processing the file",
  "Error writing file": "Error writing file",
  "Error updating file": "Error updating file",
  "Error creating file": "Error creating file",
  "Error correcting imports": "Error correcting imports",
  "error getting module path": "error getting module path",
  "Error when recovering failed tests": "Error when recovering failed tests",
  "Error retrieving current directory": "Error retrieving current directory",
  "No test failed": "No test failed",
  "Error retrieving failed test code": "Error retrieving failed test code",
  "Runtime error": "Runtime error",
  "The following tests": "The following tests",
  "returned the following errors": "returned the following errors",
  "Error": "Error",
  "responds without adding comments or explanations": "responds without adding comments or explanations",
  "Fix the following code that generated an error": "Fix the following code that generated an error",
  "Code output": "Code output",
  "End of the job": "End of the job",
  "Restarting the job ?": "Restarting the job ?",
  "file %s is not a Go file": "file %s is not a Go file",
  "Error parsing file": "Error parsing file",
  "error parsing functions from code": "error parsing functions from code",
  "error parsing structs from code": "error parsing structs from code",
  "error parsing interfaces from code": "error parsing interfaces from code",
  "error parsing consts from code": "error parsing consts from code",
  "error parsing variables from code": "error parsing variables from code",
  "Error printing function": "Error printing function",
  "Optimize this Golang code taking into account readability, performance, and best practices. Only change behavior if it can be improved for more efficient or safer use cases. Return optimizations made, without comment or explanation. Here is the code: \nHere is the Golang code:\n\n": "Optimize this Golang code taking into account readability, performance, and best practices. Only change behavior if it can be improved for more efficient or safer use cases. Return optimizations made, without comment or explanation.\nHere is the Golang code:\n\n",
  "I have some Golang code": "I have some Golang code",
  "I would like to enrich these functions with unit tests": "I would like to enrich these functions with unit tests",
  "Can you generate the tests for the nominal cases as well as the error cases? My goal is to ensure comprehensive coverage, particularly for:\n\nExpected success scenarios (nominal cases)\nError handling scenarios\nPlease structure the tests to be easily readable, using t.Run to name each test case": "Can you generate the tests for the nominal cases as well as the error cases? My goal is to ensure comprehensive coverage, particularly for:\n\nExpected success scenarios (nominal cases)\nError handling scenarios\nPlease structure the tests to be easily readable, using t.Run to name each test case",
  "Enter your question or request to the OpenAI API": "Enter your question or request to the OpenAI API about GOLANG code",
  "error when entering question": "error when entering question",
    "Files found in repo %s, create one": "Files found in repo %s, create one",
  "Error selecting file": "Error selecting file",
  "error when reading folders": "error when reading folders",
  "Create a new folder": "Create a new folder",
  "error while selecting folder": "error while selecting folder",
    "the path cannot be empty": "the path cannot be empty",
  "Enter the path of the new folder": "Enter the path of the new folder",
  "error entering path": "error entering path",
    "Choose a folder": "Choose a folder",
    "Select a folder or enter a new path": "Select a folder or enter a new path",
  "Enter the file name": "Enter the file name",
  "file name cannot be empty": "file name cannot be empty",
    "Error entering file name": "Error entering file name",
    "Error creating folders": "Error creating folders",
  "Selected file": "Selected file",
    "File path": "File path",
  "File name with extension": "File name with extension",
  "could not parse API response": "could not parse API response",
  "Warning or error": "Warning or error",
  "error parsing code": "error parsing code",
  "error running goimports": "error running goimports",
  "Error to get code modified": "Error to get code modified",
  "Analysis of": "Analysis of",
  "Here is the current project tree": "Here is the current project tree",
  "Responds with true or false in JSON. Is the following question a request for Go code": "Responds with true or false. Is the following question a request for GOLANG code",
  "Responds with true or false in JSON. Is the following question a request for an enhancement related to Golang unit tests": "Responds with true or false. Is the following question a request for an enhancement related to GOLANG unit tests",
  "Responds with true or false in JSON. Is the following question a request for generating or updating a Swagger interface": "Responds with true or false. Is the following question a request for generating or updating a Swagger interface",
  "The question is not a request for Go code": "The question is not a request for GOLANG code",
  "Write code in Go to solve the following problem": "Write code in GOLANG to solve the following problem",
  "Error checking prompt": "Error checking prompt",
  "File created successfully": "File created successfully",
  "The file already exists": "The file already exists",
  "error writing file": "error writing file",
  "error when checking for existence of file": "error when checking for existence of file",
  "error during module initialization": "error during module initialization",
  "error running go mod tidy": "error running go mod tidy",
  "error running go mod vendor": "error running go mod vendor",
  "error writing modified declaration": "error writing modified declaration",
  "line number not found in error message": "line number not found in error message",
  "line number conversion error": "line number conversion error",
  "error printing function": "error printing function",
  "error extracting interfaces": "error extracting interfaces",
  "error reading file": "error reading file",
  "error extracting OpenAI imports": "error extracting OpenAI imports",
  "error extracting structures": "error extracting structures",
  "error extracting functions": "error extracting functions",
  "error while formatting file": "error while formatting file",
  "file to modify": "file to modify",
  "Error deleting imports": "Error deleting imports",
  "Error when extract unused imports": "Error when extract unused imports",
  "Error when extract errors from prompt": "Error when extract errors from prompt",
  "Then provide the corrected code in the form": "Then provide the corrected code in the form",
  "Generates a concise response that specifies the file to modify in the form: \"MODIFY: <function or section name> (source file, not test file)\"": "Generates a concise response that specifies the file to modify in the form: \"MODIFY: <function or section name> (source file, not test file)\"",
  "Determines whether the problem is in the test file or the source file. Generates a concise response that specifies the file to modify in the form": "Determines whether the problem is in the test file or the source file. Generates a concise response that specifies the file to modify in the form",
  "The current project architecture consists of the following files": "The current project architecture consists of the following files",
  "contains data structures": "contains data structures",
  "contains business logic": "contains business logic",
  "contains implementations for interacting with external services or databases": "contains implementations for interacting with external services or databases",
  "contains HTTP route handlers": "contains HTTP route handlers",
  "In your response, for each part of the code returned, specify in which folder or file the code should be added (for example: `usecase/`, `model/`, `handler/`, etc.)": "In your response, for each part of the code returned, specify in which folder or file the code should be added (for example: `usecase/`, `model/`, `handler/`, etc.)",
  "Strictly use the following format for each part": "Strictly use the following format for each part"
}